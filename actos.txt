##JSoLang acts

main = x:allRules* { return "##Punctual\n" + x.join("") }
allRules =   r1 / r2 / r3 / r4 / anyCharacter
anyCharacter = .

r1= "act3"i { return "a << fit (3/2) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act3-1.png\"; c << fit (5/4) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act3-2.tif\"; b << fit (3/2) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act3-3.jpg\"; d << fit (3/2) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act3-4.jpg\"; x << hline (spin frt $ (saw fxy)) ((fract (etime*0.05*fr))*0.1+0.1); z << spin (fx *smoothstep [150,190] etime) d; ina << smoothstepp [0,15] etime; outa << smoothstepp [55,35] etime; inb << smoothstepp [40,55] etime; outb << smoothstepp [80,65] etime; inc << smoothstepp [65,90] etime; outc << smoothstepp [120,100] etime; ind << smoothstepp [110,150] etime; outd << smoothstepp [190,160] etime; a*ina*outa*x >> video; (zoom (1 + (inc*4)) $ spin (fr * (fract (etime*0.01))) $ b)*inb*outb >> video; (zoom (1+(fract (etime*ft))*outb) $ spin (fr * (fract (etime*0.02))) $ c) *inc*outc >> video; d*ind*outd*z >> video; zoom 3 $ (zoom (osc fr) $ b) *((outd*(-1))+1) >> video;" }

r2= "epilogue"i { return "a << img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act3-5.jpg\"; fit (3/2) $ spin (osc 0.01 *  frt) $ a *(etime*0.001) *(-6)db >> video; zoom (etime*0.0075 + 1.2) $ fit (3/2) $ spin (fr * (etime*0.007)) $ move [((-0.0195)~~(-0.025) $ osc (0.1/(etime))), ((-0.05)~~(-0.0512) $  osc (0.1/etime))] $ fit (3/2) $ a * (prox 0 ** (3+(etime*0.006)))  >> video;" }

r3= "act2-1"i { return "a << fit (3/2) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act2-1-1.jpg\"; b << fit (3/2) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act2-1-2.jpg\"; c << fit (3/2) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act2-1-3.jpg\"; ina << smoothstepp [0,15] etime; outa << smoothstepp [55,35] etime; inb << smoothstepp [40,55] etime; outb << smoothstepp [80,65] etime; inc << smoothstepp [65,90] etime; outc << smoothstepp [120,100] etime; ind << smoothstepp [110,150] etime; outd << smoothstepp [190,160] etime; zoom (1.25+etime*0.03) $ move [(-0.15)+etime*0.001,0.3+etime*(-0.005)] $ a*ina*outa >>video; zoom (1+ etime*0.01) $ move [(-0.15)+etime*(-0.001),(-0.3)+etime*(0.005)] $ b*inb*outb >>video; zoom (1+ etime*0.01) $ move [(-0.15)+etime*(-0.001),(-0.3)+etime*(0.005)] $ c*inc*outc >>video; zoom 4 $ ( (ifft fr)*c) *ind >> video; spin fr $ zoom 2 $ ( ((osc (fx*ilo*0.01)))*a) *ind >> video; tile [fxy**2] $ spin (saw 0.05) $ zoom (4*(inb*(-1)+1)) $ move (fr-(0.75)) $ a *((outa*(-1)+1)) *outb  >> video; tile [fxy**2] $ spin (saw 0.1) $ zoom (4*(inc*(-1)+1)) $ move (fr-(0.5)) $ b *((outb*(-1)+1)) *outc  >> video;"}

r4= "act2-2"i { return "a << zoom 1.3 $ fit (7/4) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act2-2-1.jpeg\"; b << fit (3/2) $  img \"https://afrancob.github.io/la-fabrica-colapsada-visuales/act2-2-2.jpg\"; (move [osc 0.01,osc 0.002] $ zoom 2 (ifft (fr*0.75))) *  a * (smoothstep [50,0] etime) *(-6)db>> video; spin (fr*0.01) $ zoom 2 (ifft (fr*0.5)) * a * (smoothstep [50,0] etime) *(-6)db>> video; spin (fr*0.05) $ b * (smoothstep [0,60] etime)   >> video; spin fr $ (0.8 * fb fxy) * (smoothstep [70,0] etime)  >> video;"}